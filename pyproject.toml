[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "mcpagenttools"
dynamic = ["version"]
description = "MCP server for tree-sitter based code parsing"
readme = "README.md"
authors = [
    {name = "Julian Harris", email = "julian.harris@gmail.com"}
]
license = {text = "Apache-2.0"}
requires-python = ">=3.10"
keywords = ["mcp", "model-context-protocol", "code-parsing", "tree-sitter", "ast", "parser"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: Apache Software License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Software Development :: Code Generators",
    "Topic :: Text Processing :: Linguistic",
]
dependencies = [
    "tree-sitter>=0.21.0",
    "tree-sitter-python>=0.20.0",
    "tree-sitter-javascript>=0.20.0",
    "tree-sitter-typescript>=0.20.0",
    "tree-sitter-go>=0.20.0",
    "mcp>=1.0.0",
    "pydantic>=2.0.0",
    "click>=8.1.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.0.0",
    "black>=23.0.0",
    "ruff>=0.1.0",
    "mypy>=1.0.0",
    "pre-commit>=3.0.0",
]
cpp = [
    "tree-sitter-cpp>=0.20.0",
]

[project.scripts]
agenttools = "agenttools.cli:main"

[project.urls]
"Homepage" = "https://github.com/yourusername/mcpagenttools"
"Documentation" = "https://github.com/yourusername/mcpagenttools/blob/main/docs/user-guide.md"
"Issues" = "https://github.com/yourusername/mcpagenttools/issues"

[tool.setuptools]
packages = ["agenttools", "agenttools.parsers", "agenttools.mcp", "agenttools.rest"]

[tool.setuptools.dynamic]
version = {attr = "agenttools.__version__.__version__"}

[tool.black]
line-length = 100
target-version = ['py38']

[tool.ruff]
line-length = 100
select = ["E", "F", "I", "N", "W", "B", "C90", "UP", "S", "T", "A", "C4", "ICN", "PIE", "PT", "RET", "SIM", "TID", "TCH", "PGH", "PL", "TRY", "FLY", "PERF", "FURB", "LOG", "RUF"]
ignore = ["E501", "S101", "PLR0913"]

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true

[tool.pytest.ini_options]
asyncio_mode = "auto"
asyncio_default_fixture_loop_scope = "function"
